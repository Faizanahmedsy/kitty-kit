{
  "content": "import { Form } from 'antd';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport AppsContainer from '@/app/components/AppsContainer';\nimport UIFormSubmitButton from '@/components/custom/buttons/UIFormSubmitButton';\nimport UIFormContainer from '@/components/global/form/UIFormContainer';\nimport PageTitle from '@/components/global/PageTitle';\nimport { useCreate{moduleName}, use{moduleName}Details, useUpdate{moduleName} } from '@/services/management/{moduleName.toLowerCase()}/institute.hook';\nimport { CreateEdit{moduleName}Props, {moduleName}Payload } from './types';\nimport { {moduleName}Form } from './{moduleName}Form';\n\nconst CreateEdit{moduleName}: React.FC<CreateEdit{moduleName}Props> = ({ editMode = false }) => {\n  const [form] = Form.useForm();\n  const params = useParams<{ id?: string }>();\n\n  // API calls\n  const add{moduleName}Mutation = useCreate{moduleName}();\n  const update{moduleName}Mutation = useUpdate{moduleName}();\n  const get{moduleName}Details = use{moduleName}Details(Number(params?.id));\n\n  useEffect(() => {\n    if (editMode && get{moduleName}Details) {\n      form.setFieldsValue(get{moduleName}Details?.data);\n    }\n  }, [editMode, get{moduleName}Details, form]);\n\n  // Handle form submission\n  const handleSubmit = (payload: {moduleName}Payload) => {\n    const mutation: any = editMode ? update{moduleName}Mutation : add{moduleName}Mutation;\n    mutation.mutate(editMode ? { id: Number(params?.id), payload } : payload, { onSuccess: () => {} });\n  };\n\n  return (\n    <>\n      <PageTitle\n        extraItem={\n          <UIFormSubmitButton\n            onClick={form.submit}\n            api={editMode ? update{moduleName}Mutation : add{moduleName}Mutation}\n          >\n            {editMode ? 'Save Changes' : 'Submit'}\n          </UIFormSubmitButton>\n        }\n        breadcrumbs={[\n          { label: 'Dashboard', href: '/dashboard' },\n          { label: '{moduleName} List', href: '/{moduleName.toLowerCase()}/list' },\n          { label: `${editMode ? 'Edit' : 'Create'} {moduleName}` },\n        ]}\n      >\n        {`${editMode ? 'Edit' : 'Create'} {moduleName}`}\n      </PageTitle>\n      <AppsContainer title={' '} fullView={true} type='bottom'>\n        <UIFormContainer title={'{moduleName} Details'}>\n          <{moduleName}Form form={form} handleSubmit={handleSubmit} />\n        </UIFormContainer>\n      </AppsContainer>\n    </>\n  );\n};\n\nexport default CreateEdit{moduleName};"
}
